Index: src/main/java/ListarPersonas/Persona.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ListarPersonas/Persona.java b/src/main/java/ListarPersonas/Persona.java
new file mode 100644
--- /dev/null	(date 1717549366289)
+++ b/src/main/java/ListarPersonas/Persona.java	(date 1717549366289)
@@ -0,0 +1,29 @@
+package ListarPersonas;
+
+public class Persona {
+    private String nombre;
+    private String apellido;
+    // Constructor
+    public Persona(String nombre, String apellido) {
+        this.nombre = nombre;
+        this.apellido = apellido;
+    }
+
+    // Getters y Setters
+    public String getNombre() {
+        return nombre;
+    }
+
+    public void setNombre(String nombre) {
+        this.nombre = nombre;
+    }
+
+    public String getApellido() {
+        return apellido;
+    }
+
+    public void setApellido(String apellido) {
+        this.apellido = apellido;
+    }
+}
+
Index: src/main/java/ListarPersonas/Persona_metodo_main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ListarPersonas/Persona_metodo_main.java b/src/main/java/ListarPersonas/Persona_metodo_main.java
new file mode 100644
--- /dev/null	(date 1717551670702)
+++ b/src/main/java/ListarPersonas/Persona_metodo_main.java	(date 1717551670702)
@@ -0,0 +1,41 @@
+package ListarPersonas;
+
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+
+public class Persona_metodo_main {
+    public static void main(String[] args) {
+        // Crear 5 objetos de Persona con nombres y apellidos aleatorios
+        Persona persona1 = new Persona("María Antonieta", "González Navarro");
+        Persona persona2 = new Persona("Ana Luisa", "López Pereira");
+        Persona persona3 = new Persona("Juan Antonio", "Martínez Rios");
+        Persona persona4 = new Persona("Pedro Alfredo", "Sánchez Fernandez");
+        Persona persona5 = new Persona("Juan Luis", "Pérez Fonseca");
+
+        // objetos a una lista
+        List<Persona> listaPersonas = new ArrayList<>();
+        listaPersonas.add(persona1);
+        listaPersonas.add(persona2);
+        listaPersonas.add(persona3);
+        listaPersonas.add(persona4);
+        listaPersonas.add(persona5);
+
+        // Ordenar la lista alfabéticamente por nombre
+        Collections.sort(listaPersonas, Comparator.comparing(Persona::getNombre));
+        System.out.println("Ordenado por nombre:");
+        listaPersonas.forEach(persona -> System.out.println(persona.getNombre() + " " + persona.getApellido()));
+
+        // Ordenar la lista alfabéticamente por apellido
+        Collections.sort(listaPersonas, Comparator.comparing(Persona::getApellido));
+        System.out.println("\nOrdenado por apellido:");
+        listaPersonas.forEach(persona -> System.out.println(persona.getApellido() + " " + persona.getNombre()));
+
+        // Ordenar la lista inversamente por apellido
+        Collections.sort(listaPersonas, Comparator.comparing(Persona::getApellido).reversed());
+        System.out.println("\nOrdenado inversamente por apellido:");
+        listaPersonas.forEach(persona -> System.out.println(persona.getApellido() + " " + persona.getNombre()));
+    }
+}
\ No newline at end of file
Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
new file mode 100644
--- /dev/null	(date 1717549155299)
+++ b/src/main/java/org/example/Main.java	(date 1717549155299)
@@ -0,0 +1,17 @@
+package org.example;
+
+//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
+// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
+public class Main {
+    public static void main(String[] args) {
+        //TIP Press <shortcut actionId="ShowIntentionActions"/> with your caret at the highlighted text
+        // to see how IntelliJ IDEA suggests fixing it.
+        System.out.printf("Hello and welcome!");
+
+        for (int i = 1; i <= 5; i++) {
+            //TIP Press <shortcut actionId="Debug"/> to start debugging your code. We have set one <icon src="AllIcons.Debugger.Db_set_breakpoint"/> breakpoint
+            // for you, but you can always add more by pressing <shortcut actionId="ToggleLineBreakpoint"/>.
+            System.out.println("i = " + i);
+        }
+    }
+}
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1717552629596)
+++ b/.idea/vcs.xml	(date 1717552629596)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	(date 1717549164381)
+++ b/pom.xml	(date 1717549164381)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>ListarPersonas_EricesGonzalez.java</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+
+</project>
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1717549155287)
+++ b/.gitignore	(date 1717549155287)
@@ -0,0 +1,38 @@
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### IntelliJ IDEA ###
+.idea/modules.xml
+.idea/jarRepositories.xml
+.idea/compiler.xml
+.idea/libraries/
+*.iws
+*.iml
+*.ipr
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1717549167567)
+++ b/.idea/.gitignore	(date 1717549167567)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1717549167436)
+++ b/.idea/misc.xml	(date 1717549167436)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1717549167445)
+++ b/.idea/encodings.xml	(date 1717549167445)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
